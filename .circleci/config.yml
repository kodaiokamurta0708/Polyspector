# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: centos:centos7.5.1804
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          #working_directory: ~/project/App.Tests
          name: library Installation
          command: |
            curl -sL https://rpm.nodesource.com/setup_6.x |  bash -
            yum install -y nodejs 
            node -v 
      - checkout
      - run:
          name: install forever
          working_directory: Polyspector
          command: |
          
            npm install
            npm install -g forever
             #[rabbitmq] edit /etc/selinux/config
            #sed -i -e 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
            #yum install -y epel-release
            #yum install -y erlang
            #yum install -y rabbitmq-server 
            #systemctl start rabbitmq-server ; systemctl enable rabbitmq-server
             #install 3rd party lib from npm
            #cd VisualizationPlatform/
            #npm install
            #npm install sqlite3 bower
            #bower install

#Please Set Data at server/backend/worker_csvtsv/data/hoge.csv
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
